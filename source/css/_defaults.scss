// Colors
$white: #fafafa;
$lgray: #ccc;
$gray: #666;
$dgray: #333;
$black: #000;

$default-transition-duration: 0.2s;
$default-transition-function: ease-in-out;

$default-box-shadow-color: #333;
$default-box-shadow-h-offset: 0px;
$default-box-shadow-v-offset: 0px;
$default-box-shadow-blur: 8px;
$default-box-shadow-spread: 0;

$default-border-radius: 4px;

// set a base font that should match the browser default
$base-font-size: 16px;

$site-width: 100%;

// Baseline, measured in pixels
// The value should be the same as the font-size value for the html element
// If the html element's font-size is set to 62.5% (of the browser's default font-size of 16px),
// then the variable below would be 10px.
$baseline-px: 16px;

@mixin rem($property, $px-values) {
  // Convert the baseline into rems
  $baseline-rem: $baseline-px / 1rem;
  // Print the first line in pixel values
  #{$property}: $px-values;
  // If there is only one (numeric) value, return the property/value line for it.
  @if type-of($px-values) == "number" {
    #{$property}: $px-values / $baseline-rem; }
  @else {
    // Create an empty list that we can dump values into
    $rem-values: unquote("");
    @each $value in $px-values {
      // If the value is zero, return 0
      @if $value == 0 {
        $rem-values: append($rem-values, $value); }
      @else {
        $rem-values: append($rem-values, $value / $baseline-rem);
      }
    }
    // Return the property and its list of converted values
    #{$property}: $rem-values;
  }
}

// mixin to provide a clear to any element
@mixin clear {
  &:before, &:after {
    content: "\0020";
    display: table;
  }
  &:after { clear: both; }
  @if $ie7-support {
    & { zoom: 1; }
  }
}

// my custom transition function - much more humanistic than easing etc
@mixin customTransition($property: all, $timing: 300ms) {
  -webkit-transition: $property $timing cubic-bezier(0.26, 0.86, 0.44, 0.985);
  -moz-transition:    $property $timing cubic-bezier(0.26, 0.86, 0.44, 0.985);
  -ms-transition:     $property $timing cubic-bezier(0.26, 0.86, 0.44, 0.985);
  -o-transition:      $property $timing cubic-bezier(0.26, 0.86, 0.44, 0.985);
  transition:         $property $timing cubic-bezier(0.26, 0.86, 0.44, 0.985);
}

.symbol {
  font-family: $websymbols;
}
